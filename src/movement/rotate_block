from shape.shape_indexes import ShapeIndexes

class RotateBlock(): 
    def __init__(self, rotation, all_current_blocks, current_block_shape, cell_size):
        self.rotation = rotation
        self.all_current_blocks = all_current_blocks
        self.current_block_shape = current_block_shape
        self.cell_size = cell_size

    def rotate_block(self):
        """Rotates currently used piece.
        """
        self.rotation += 1
        if self.rotation == 4:
            self.rotation = 0
 
        i = 0
        n = 0
        for block in self.all_current_blocks:
            if n == 0:
                self.current_block = ShapeIndexes(block.rect.x/30, block.rect.y/30, self.current_block_shape.shape, self.rotation)
                break
            n += 1

        for block in self.all_current_blocks:
            if self.current_block_shape.index == 0: #toimii
                block.rect.x = self.cell_size * (self.current_block.indexes[i][0])
                block.rect.y = self.cell_size * (self.current_block.indexes[i][1]+3)
            elif self.current_block_shape.index == 1:
                block.rect.x = self.cell_size * (self.current_block.indexes[i][0])
                block.rect.y = self.cell_size * (self.current_block.indexes[i][1]+3)
            elif self.current_block_shape.index == 2:#toimii
                block.rect.x = self.cell_size * (self.current_block.indexes[i][0]+1)
                block.rect.y = self.cell_size * (self.current_block.indexes[i][1]+4)
            elif self.current_block_shape.index == 4:#toimii
                if self.rotation == 3:
                    block.rect.x = self.cell_size * (self.current_block.indexes[i][0]+2)
                    block.rect.y = self.cell_size * (self.current_block.indexes[i][1]+3)
                else:
                    block.rect.x = self.cell_size * (self.current_block.indexes[i][0])
                    block.rect.y = self.cell_size * (self.current_block.indexes[i][1]+3)
            elif self.current_block_shape.index == 5:
                block.rect.x = self.cell_size * (self.current_block.indexes[i][0])
                block.rect.y = self.cell_size * (self.current_block.indexes[i][1]+4)
            elif self.current_block_shape.index == 6:#toimii
                if self.rotation == 3:
                    block.rect.x = self.cell_size * (self.current_block.indexes[i][0]+1)
                    block.rect.y = self.cell_size * (self.current_block.indexes[i][1]+3)
                else:
                    block.rect.x = self.cell_size * (self.current_block.indexes[i][0])
                    block.rect.y = self.cell_size * (self.current_block.indexes[i][1]+3)
            i += 1
